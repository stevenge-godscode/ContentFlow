version: '3.8'

services:
  # 下载服务 1 (无外部端口)
  content-download-1:
    image: genesis-download
    build:
      context: .
      dockerfile: Dockerfile.download
    # 移除所有外部端口映射
    expose:
      - "5003"
    environment:
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://user:password@postgres:5432/content_db
      - WEWE_RSS_URL=http://host.docker.internal:4000
      - SERVICE_PORT=5003
      - LOG_LEVEL=INFO
    volumes:
      - genesis_content:/tmp/genesis-content
    depends_on:
      - redis
      - postgres
    networks:
      - genesis-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 下载服务 2 (无外部端口)
  content-download-2:
    image: genesis-download
    build:
      context: .
      dockerfile: Dockerfile.download
    # 移除所有外部端口映射
    expose:
      - "5004"
    environment:
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://user:password@postgres:5432/content_db
      - WEWE_RSS_URL=http://host.docker.internal:4000
      - SERVICE_PORT=5004
      - LOG_LEVEL=INFO
    volumes:
      - genesis_content:/tmp/genesis-content
    depends_on:
      - redis
      - postgres
    networks:
      - genesis-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5004/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 文本提取服务 (无外部端口)
  content-parser:
    image: genesis-extraction
    build:
      context: .
      dockerfile: Dockerfile.extraction
    # 移除所有外部端口映射
    expose:
      - "5006"
    environment:
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://user:password@postgres:5432/content_db
      - TEXT_EXTRACTION_PORT=5006
      - LOG_LEVEL=INFO
    volumes:
      - genesis_content:/tmp/genesis-content
    depends_on:
      - redis
      - postgres
    networks:
      - genesis-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5006/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (队列+缓存) - 仅内部访问
  redis:
    image: redis:7-alpine
    # 移除外部端口映射
    expose:
      - "6379"
    volumes:
      - redis_data:/data
    command: redis-server --save 60 1 --loglevel warning
    networks:
      - genesis-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL (内容处理状态数据库) - 仅内部访问
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=content_db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    # 移除外部端口映射
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - genesis-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d content_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 监控服务 (仅用于内部健康检查)
  monitoring:
    image: alpine/curl
    command: |
      sh -c "
        while true; do
          echo '=== Genesis Health Check ==='
          echo 'Download Service 1:'
          curl -s http://content-download-1:5003/health || echo 'Service down'
          echo 'Download Service 2:'
          curl -s http://content-download-2:5004/health || echo 'Service down'
          echo 'Text Extraction:'
          curl -s http://content-parser:5006/health || echo 'Service down'
          echo '=========================='
          sleep 300
        done
      "
    depends_on:
      - content-download-1
      - content-download-2
      - content-parser
    networks:
      - genesis-network
    restart: unless-stopped

networks:
  genesis-network:
    driver: bridge
    # 内部网络，不对外暴露
    internal: false  # 设为true会完全隔离网络，但需要WeWe RSS访问
    name: genesis-internal-network

volumes:
  redis_data:
    name: genesis_redis_data
  postgres_data:
    name: genesis_postgres_data
  genesis_content:
    name: genesis_content_data