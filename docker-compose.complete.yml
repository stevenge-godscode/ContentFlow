version: '3.8'

services:
  # WeWe RSS - 保留web接口的外部访问
  wewe-rss:
    image: cooderl/wewe-rss:latest
    ports:
      - "4000:4000"  # 保留Web界面访问
    environment:
      - DATABASE_URL=mysql://root:123456@mysql:3306/wewe-rss?schema=public
      - AUTH_CODE=123567
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - genesis-network
    restart: unless-stopped

  # MySQL数据库 - 完全内部
  mysql:
    image: mysql:8.3.0
    command: --mysql-native-password=ON
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      TZ: 'Asia/Shanghai'
      MYSQL_DATABASE: 'wewe-rss'
    volumes:
      - db_data:/var/lib/mysql
    # 移除外部端口映射
    expose:
      - "3306"
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      timeout: 45s
      interval: 10s
      retries: 10
    networks:
      - genesis-network
    restart: unless-stopped

  # 下载服务 1 (完全内部)
  content-download-1:
    image: genesis-download
    build:
      context: .
      dockerfile: Dockerfile.download
    expose:
      - "5003"
    environment:
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://user:password@postgres:5432/content_db
      - WEWE_RSS_URL=http://wewe-rss:4000
      - SERVICE_PORT=5003
      - LOG_LEVEL=INFO
    volumes:
      - genesis_content:/tmp/genesis-content
    depends_on:
      - redis
      - postgres
      - wewe-rss
    networks:
      - genesis-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 下载服务 2 (完全内部)
  content-download-2:
    image: genesis-download
    build:
      context: .
      dockerfile: Dockerfile.download
    expose:
      - "5004"
    environment:
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://user:password@postgres:5432/content_db
      - WEWE_RSS_URL=http://wewe-rss:4000
      - SERVICE_PORT=5004
      - LOG_LEVEL=INFO
    volumes:
      - genesis_content:/tmp/genesis-content
    depends_on:
      - redis
      - postgres
      - wewe-rss
    networks:
      - genesis-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5004/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 文本提取服务 (完全内部)
  content-parser:
    image: genesis-extraction
    build:
      context: .
      dockerfile: Dockerfile.extraction
    expose:
      - "5006"
    environment:
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://user:password@postgres:5432/content_db
      - TEXT_EXTRACTION_PORT=5006
      - LOG_LEVEL=INFO
    volumes:
      - genesis_content:/tmp/genesis-content
    depends_on:
      - redis
      - postgres
    networks:
      - genesis-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5006/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (完全内部)
  redis:
    image: redis:7-alpine
    expose:
      - "6379"
    volumes:
      - redis_data:/data
    command: redis-server --save 60 1 --loglevel warning
    networks:
      - genesis-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL (完全内部)
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=content_db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - genesis-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d content_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 系统监控 (内部健康检查)
  monitoring:
    image: alpine/curl
    command: |
      sh -c "
        while true; do
          echo '=== Full Stack Health Check ==='
          echo 'WeWe RSS:'
          curl -s -o /dev/null -w '%{http_code}' http://wewe-rss:4000 || echo 'Service down'
          echo ''
          echo 'Download Service 1:'
          curl -s http://content-download-1:5003/health | head -c 100 || echo 'Service down'
          echo ''
          echo 'Download Service 2:'
          curl -s http://content-download-2:5004/health | head -c 100 || echo 'Service down'
          echo ''
          echo 'Text Extraction:'
          curl -s http://content-parser:5006/health | head -c 100 || echo 'Service down'
          echo ''
          echo '================================'
          sleep 300
        done
      "
    depends_on:
      - wewe-rss
      - content-download-1
      - content-download-2
      - content-parser
    networks:
      - genesis-network
    restart: unless-stopped

networks:
  genesis-network:
    driver: bridge
    name: genesis-complete-network

volumes:
  db_data:
    external: true
    name: af2387f83fdb6104ac54efc9e7b62a9ac27cced340a32250d00100b7094cd0d7
  redis_data:
    external: true
    name: 71b038910c1ac45f9b38e50dac5cb5e1c03cb92672358545c980949956e5658e
  postgres_data:
    external: true
    name: af0339824b9f09e11313c105d2991e1b069fcd7bc50fdb4b8570fe179a4c1d45
  genesis_content:
    name: genesis_content_data